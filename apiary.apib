FORMAT: 1A
HOST: https://private-909ac-devsummit.apiary-mock.com

# devsummit

Dev summit API blueprints

## User Auth [/auth]

### Register a user [POST /auth/register]

+ Request (application/json)

        {
            "first_name": "andy",
            "last_name": "herman",
            "role": "attendee",
            "username": "andy",
            "email": "shi88.andy@gmail.com",
            "password": "andy123"
        }

+ Response 200 (application/json)

        {
            "message": "user succesfully registered",
            "result": {
               "id": 1,
               "first_name": "andy",
               "last_name": "herman",
               "username": "andy",
               "email": "shi88.andy@gmail.com",
               "created_at": "Wed, 02 Aug 2017 15:18:31 GMT",
               "updated_at": "Wed, 02 Aug 2017 15:18:31 GMT"
            },
            "success": true
        }


### Login a User [POST /auth/login]

+ Request (application/json)

        {
            "username": "andy",
            "password": "andy123"
        }

+ Response 200 (application/json)

    + Body

            {
                "message": "user logged in succesfully",
                "result": {
                    "access_token": "eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8",
                    "refresh_token": "126991391b52558b"
                },
                "success": true
            }

## User Management [/api/users]

### List of Users [GET]

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes
        + meta (object)
            - count: 10,
            - total: 10
        + data (array[UserResponse]) 


### Get a User [GET /api/users/{user_id}]

+ Parameters
    - user_id: `1` (string, required) - Valid User ID

+ Response 200 (application/json)
    + Attributes
        + meta (object)
            - count: 1,
            - total: 1
        + data (UserResponse) 


### Update a User [PATCH /api/users/{user_id}]
    
+ Parameters
    - user_id : `1` (string, required) - Valid User ID

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (object)
            - attributes (User)

+ Response 200 (application/json)
    + Attributes
        + meta (object)
            - message: 'User succesfully updated'
            - success: true
        + data (UserResponse)



## Attendee [/api/v1/attendees]

Available include: `user`

### Get list of attendee [GET]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - count: `10` (number)
            - total: `10` (number)
            - message: `Attendees successfully retrieved` (string)
            - success: `true` (boolean)
        + data (array[AttendeeResponse])
        + links (object)
            - first: `https://localhost:5000/api/v1/attendees?page[limit]=10&page[offset]=0` (string, nullable)
            - last: `https://localhost:5000/api/v1/attendees?page[limit]=10&page[offset]=10` (string, nullable)
            - next: `https://localhost:5000/api/v1/attendees?page[limit]=10&page[offset]=10` (string, nullable)
            - prev: `null` (string, nullable)


### Get Attendee by id [GET /api/v1/attendees/{attendee_id}]

+ Parameters 

    - attendee_id: `1` (number, required) - Valid attendee id

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message: `Attendee successfully retrieved` (string)
            - success: `true` (boolean)
        + data (AttendeeResponse)
        + included (UserResponse)

### Edit Attendee by id [PATCH /api/v1/attendees/{attendee_id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (AttendeeResponse)


+ Parameters
    
    - attendee_id: `1` (number, required) - Valid attendee id

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message: `Attendee data succesfully updated` (string)
            - success: `true` (boolean)
        + data (AttendeeResponse)

### Get points log [GET /api/v1/pointslog]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message: `Points log data succesfully retrieved` (string)
            - success: `true` (boolean)
        + data (array[PointsLogResponse])
        + included (array)
            - (object)
                - sender (BoothResponse)
                - receiver (AttendeeResponse)


## Booth [/api/v1/booths]

Available include: `user`, `stage`

### Get list of booths [GET]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - count: `10` (number)
            - total: `10` (number)
            - message: `Booths successfully retrieved` (string)
            - success: `true` (boolean)
        + data (array[BoothResponse])
        + links (object)
            - first: `https://localhost:5000/api/v1/booths?page[limit]=10&page[offset]=0` (string, nullable)
            - last: `https://localhost:5000/api/v1/booths?page[limit]=10&page[offset]=10` (string, nullable)
            - next: `https://localhost:5000/api/v1/booths?page[limit]=10&page[offset]=10` (string, nullable)
            - prev: `null` (string, nullable)


### Get Booth by id [GET /api/v1/booths/{booth_id}]

+ Parameters

    - booth_id: `1` (number, required) - Valid booth id

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message: `Booth successfully retrieved` (string)
            - success: `true` (boolean)
        + data (BoothResponse)
        + included (object)
            - user (UserResponse)
            - stage (StageResponse)

### Edit Booth by id [PATCH /api/v1/booths/{booth_id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (BoothResponse)


+ Parameters
    
    - booth_id: `1` (number, required) - Valid booth id

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message: `Booth data succesfully updated` (string)
            - success: `true` (boolean)
        + data (BoothResponse)

### Send points to attendee [PATCH /api/v1/booths/transfer]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (object)
            - points: `100` (number, required) - amount of point to send
            - receiver: `1` (number, required) - valid attendee id

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message: `Point sent succesfully` (string)
            - success: `true` (boolean)
        + data (PointTransactionResponse)


## Speaker [/api/v1/speakers]

Available include: `user`, `material`

### Get list of speakers [GET]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - count: `10` (number)
            - total: `10` (number)
            - message: `Speakers successfully retrieved` (string)
            - success: `true` (boolean)
        + data (array[AttendeeResponse])
        + links (object)
            - first: `https://localhost:5000/api/v1/speakers?page[limit]=10&page[offset]=0` (string, nullable)
            - last: `https://localhost:5000/api/v1/speakers?page[limit]=10&page[offset]=10` (string, nullable)
            - next: `https://localhost:5000/api/v1/speakers?page[limit]=10&page[offset]=10` (string, nullable)
            - prev: `null` (string, nullable)


### Get Speaker by id [GET /api/v1/speakers/{speaker_id}]

+ Parameters

    - speaker_id: `1` (number, required) - Valid speaker id

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message: `Speaker successfully retrieved` (string)
            - success: `true` (boolean)
        + data (SpeakerResponse)
        + included (object)
            - user (UserResponse)
            - materials (array[MaterialResponse])

### Edit Speaker by id [PATCH /api/v1/speakers/{speaker_id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (BoothResponse)


+ Parameters
    
    - speaker_id: `1` (number, required) - Valid speaker id

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message: `Speaker data succesfully updated` (string)
            - success: `true` (boolean)
        + data (SpeakerResponse)


## Tickets [/api/v1/tickets]

### Get list of tickets [GET]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)
    + Attributes
        + meta (object)
          - count: `10` (number)
          - total: `10` (number)
        + links (object)
          - first: `https://localhost:5000/api/v1/tickets?page[limit]=10&page[offset]=0` (string, nullable)
          - last: `https://localhost:5000/api/v1/tickets?page[limit]=10&page[offset]=10` (string, nullable)
          - next: `https://localhost:5000/api/v1/tickets?page[limit]=10&page[offset]=10` (string, nullable)
          - prev: `null` (string, nullable)
        + data (array[TicketResponse])

### Get ticket filter by id [GET /api/v1/tickets/{id}]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - id: `1` (number, required) - valid ticket id

+ Response 200 (application/json)
    + Attributes
        + meta (object)
            - message: `Ticket retrieved successfully` (string)
            - success: `true` (boolean)
        + data (TicketResponse)

### Edit ticket filter by id [PATCH /api/v1/tickets/{id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (object)
            + attributes (Ticket)

+ Parameters
    
    - id: `1` (number, required) - valid ticket id

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message:  `Ticket successfully updated` (string)
            - success: `true` (boolean)
        + data (TicketResponse)

### Transfer ticket [POST /api/v1/tickets/{ticket_id}/transfer]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (TicketTransferRequest)

+ Parameters
    
    - ticket_id: `1` (number, required) - valid ticket id

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message:  `Ticket successfully transfered` (string)
            - success: `true` (boolean)
        + data (TicketResponse)
        + included (object)
            - from (UserResponse)
            - to (UserResponse)

### Ticket Transfer log [POST /api/v1/tickets/{ticket_id}/transfer/log]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters
    
    - ticket_id: `1` (number, required) - valid ticket id

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message:  `Ticket transfer log succesfully retrieved` (string)
            - success: `true` (boolean)
        + data (array[TransferTicketLog])
        + included (array)
            - (object)
                - sender (UserResponse)
                - receiver (UserResponse)


### Post Ticket [POST /api/v1/tickets]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Ticket)

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message:  `Ticket successfully created` (string)
            - success: `true` (boolean)
        + data (TicketResponse)

### Delete ticket [DELETE /api/v1/tickets/{id}]

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - id: `1` (number, required) - valid ticket id

+ Response 204


## Materials API [/api/v1/materials]


### Get list of speaker materials [GET]

Get list of all materials of: logged in speaker, all speakers, and material of related speaker by passing `?speaker_id=id` parameter

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)
    + Attributes
        + meta (object)
          - count: `10` (number)
          - total: `10` (number)
        + links (object)
          - first: `https://localhost:5000/api/v1/materials?page[limit]=10&page[offset]=0` (string, nullable)
          - last: `https://localhost:5000/api/v1/materials?page[limit]=10&page[offset]=10` (string, nullable)
          - next: `https://localhost:5000/api/v1/materials?page[limit]=10&page[offset]=10` (string, nullable)
          - prev: `null` (string, nullable)
        + data (array[MaterialResponse])

### Get material filter by id [GET /api/v1/materials/{material_id}]

Request to spesific materials

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - material_id: `1` (number, required) - valid material id

+ Response 200 (application/json)
    + Attributes
        + meta (object)
            - message: `Material retrieved successfully` (string)
            - success: `true` (boolean)
        + data (MaterialResponse)

### Post Material [POST /api/v1/materials]

Speaker post new materials

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Material)

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message:  `Material successfully created` (string)
            - success: `true` (boolean)
        + data (MaterialResponse)


### Delete Material [DELETE /api/v1/materials/{id}]

Speaker may delete his/her materials

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - id: `1` (number, required) - valid material id

+ Response 204


## Events API [/api/v1/events]


### Get list of events [GET]

Get list of all events available filters: `user_id`, `time`, `stage_id`

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)
    + Attributes
        + meta (object)
          - count: `10` (number)
          - total: `10` (number)
        + links (object)
          - first: `https://localhost:5000/api/v1/events?page[limit]=10&page[offset]=0` (string, nullable)
          - last: `https://localhost:5000/api/v1/events?page[limit]=10&page[offset]=10` (string, nullable)
          - next: `https://localhost:5000/api/v1/events?page[limit]=10&page[offset]=10` (string, nullable)
          - prev: `null` (string, nullable)
        + data (array[EventResponse])

### Get event filter by id [GET /api/v1/events/{event_id}]

Request to spesific event

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - event_id: `1` (number, required) - valid event id

+ Response 200 (application/json)
    + Attributes
        + meta (object)
            - message: `Event retrieved successfully` (string)
            - success: `true` (boolean)
        + data (MaterialResponse)

### Post Event [POST /api/v1/events]

post new events

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Event)

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message:  `Event successfully created` (string)
            - success: `true` (boolean)
        + data (EventResponse)

### Edit event filter by id [PATCH /api/v1/tickets/{event_id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (object)
            + attributes (Event)

+ Parameters
    
    - event_id: `1` (number, required) - valid event id

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message:  `Event successfully updated` (string)
            - success: `true` (boolean)
        + data (EventResponse)

### Delete Event [DELETE /api/v1/events/{event_id}]

Event may deleted 

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - event_id: `1` (number, required) - valid event id

+ Response 204


## Stage API [/api/v1/stages]

Management of stages

### Get list of stages [GET]

Get list of all stages

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)
    + Attributes
        + meta (object)
          - count: `10` (number)
          - total: `10` (number)
        + links (object)
          - first: `https://localhost:5000/api/v1/stages?page[limit]=10&page[offset]=0` (string, nullable)
          - last: `https://localhost:5000/api/v1/stages?page[limit]=10&page[offset]=10` (string, nullable)
          - next: `https://localhost:5000/api/v1/stages?page[limit]=10&page[offset]=10` (string, nullable)
          - prev: `null` (string, nullable)
        + data (array[EventResponse])

### Get stage filter by id [GET /api/v1/stages/{stage_id}]

Request to spesific stage

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - stage_id: `1` (number, required) - valid stage id

+ Response 200 (application/json)
    + Attributes
        + meta (object)
            - message: `Stage retrieved successfully` (string)
            - success: `true` (boolean)
        + data (StageResponse)


### Get stage pictures by id [GET /api/v1/stages/{stage_id}/pictures]

Get all spesific stage pictures

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - stage_id: `1` (number, required) - valid stage id

+ Response 200 (application/json)
    + Attributes
        + meta (object)
            - message: `Pictures retrieved successfully` (string)
            - success: `true` (boolean)
        + data (array[StagePictureResponse])


### Get stage spots by id [GET /api/v1/stages/{stage_id}/spots]

Get all spots included in spesific stage

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - stage_id: `1` (number, required) - valid stage id

+ Response 200 (application/json)
    + Attributes
        + meta (object)
            - message: `Spots retrieved successfully` (string)
            - success: `true` (boolean)
        + data (array[SpotResponse])

### Post Stage [POST /api/v1/stages]

post new stage

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Stage)

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message:  `Stage successfully created` (string)
            - success: `true` (boolean)
        + data (StageResponse)

### Post Stage Picture [POST /api/v1/stages/{stage_id}/pictures]

Post stage pictures

+ Request With File (multipart/form-data; boundary=MultipartBoundry)

    + Headers

            Accept: application/vnd.api+json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Body

            --MultipartBoundry
            Content-Disposition: form-data; name="photo"; filename="some-picture.jpg"
            Content-Type: image/jpeg

            RAW_FILE_DATA
            --MultipartBoundry

+ Parameters

    - stage_id: `1` (number, required) - valid stage id

+ Response 200 (application/vnd.api+json)
    + Attributes
        + meta (object)
            - message: `Photo succesfully uploaded` (string)
            - success: `true` (boolean)
        + data (StagePictureResponse)

### Edit stage filter by id [PATCH /api/v1/stages/{event_id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (object)
            + attributes (Stage)

+ Parameters
    
    - event_id: `1` (number, required) - valid event id

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message:  `Stage successfully updated` (string)
            - success: `true` (boolean)
        + data (StageResponse)

### Delete Stage [DELETE /api/v1/stages/{stage_id}]

Stage may be deleted 

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - stage_id: `1` (number, required) - valid stage id

+ Response 204

### Delete Stage Pictures [DELETE /api/v1/stages/{stage_id}/pictures/{picture_id}]

Stage picture may be deleted

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - stage_id: `1` (number, required) - valid stage id
    - picture_id: `1` (number, required) - valid stage picture id

+ Response 204



## Beacon API [/api/v1/beacons]

Management of beacons

### Get list of beacons [GET]

Get list of all beacons

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)
    + Attributes
        + meta (object)
          - count: `10` (number)
          - total: `10` (number)
        + links (object)
          - first: `https://localhost:5000/api/v1/beacons?page[limit]=10&page[offset]=0` (string, nullable)
          - last: `https://localhost:5000/api/v1/beacons?page[limit]=10&page[offset]=10` (string, nullable)
          - next: `https://localhost:5000/api/v1/beacons?page[limit]=10&page[offset]=10` (string, nullable)
          - prev: `null` (string, nullable)
        + data (array[BeaconResponse])

### Get beacon filter by id [GET /api/v1/beacons/{beacon_id}]

Request to spesific beacon

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - beacon_id: `1` (number, required) - valid beacon id

+ Response 200 (application/json)
    + Attributes
        + meta (object)
            - message: `Beacon retrieved successfully` (string)
            - success: `true` (boolean)
        + data (BeaconResponse)
        + included (object)
            - stage (StageResponse)

### Post Beacon [POST /api/v1/beacons]

post new beacon

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Attributes (object)
  + data (Beacon)

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message:  `Beacon successfully created` (string)
            - success: `true` (boolean)
        + data (BeaconResponse)
        + included (object)
            - spot (SpotResponse)

### Edit beacon filter by id [PATCH /api/v1/beacons/{beacon_id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8


+ Attributes (object)
  + data (object)
      - type: beacon (string)
      - attributes (object)
        - stage_id: `1` (number) - valid stage id

+ Parameters
    
    - beacon_id: `1` (number, required) - valid beacon id

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message:  `Beacon successfully updated` (string)
            - success: `true` (boolean)
        + data (BeaconResponse)
        + included (object)
          - stage (SpotResponse)

### Delete Beacon [DELETE /api/v1/beacons/{beacon_id}]

Beacon may be deleted

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - beacon_id: `1` (number, required) - valid beacon id

+ Response 204

## Spots [/api/v1/spots]

Management of stages

### Get list of spots [GET]

Get list of all spots

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)
    + Attributes
        + meta (object)
          - count: `10` (number)
          - total: `10` (number)
        + links (object)
          - first: `https://localhost:5000/api/v1/spots?page[limit]=10&page[offset]=0` (string, nullable)
          - last: `https://localhost:5000/api/v1/spots?page[limit]=10&page[offset]=10` (string, nullable)
          - next: `https://localhost:5000/api/v1/spots?page[limit]=10&page[offset]=10` (string, nullable)
          - prev: `null` (string, nullable)
        + data (array[SpotResponse])

### Get spot filter by id [GET /api/v1/spots/{spot_id}]

May include `beacon`

Request to spesific spot

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - spot_id: `1` (number, required) - valid spot id

+ Response 200 (application/json)
    + Attributes
        + meta (object)
            - message: `Spot retrieved successfully` (string)
            - success: `true` (boolean)
        + data (SpotResponse)
        + included (object)
            - beacon (BeaconResponse)
            - stage (StageResponse)


### Edit spot filter by id [PATCH /api/v1/spots/{spot_id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Attributes (object)
    + data (object)
        - type: spot (string)
        - attributes (object)
            - coordinate_x: `12` (number)
            - coordinate_y: `10` (number)
            - stage_id: `1` (number) - valid stage id
            - beacon_id: `1` (number) - valid beacon id

+ Parameters
    
    - spot_id: `1` (number, required) - valid spot id

+ Response 200 (application/json)

    + Attributes
        + meta (object)
            - message:  `Spot successfully updated` (string)
            - success: `true` (boolean)
        + data (BeaconResponse)
        + included (object)
          - beacon (BeaconResponse)
          - stage (StageResponse)

### Delete Spot [DELETE /api/v1/spots/{spot_id}]

Spot may be deleted 

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - spot_id: `1` (number, required) - valid spot id

+ Response 204



## Data Structures

###  User
- `first_name`: `andy` (string),
- `last_name`: `herman` (string),
- `username`: `andy` (string),
- `email`: `shi88.andy@gmail.com` (string),
- `created_at`: `Wed, 02 Aug 2017 15:18:31 GMT` (string),
- `updated_at`: `Wed, 02 Aug 2017 15:18:31 GMT` (string)

### UserResponse
- type: 'User' (string)
- id: 1 (number)
- attributes (User)            

### Ticket
- ticket_type: `gold` (string)
- price: `10000` (number)
- information: `ticket description` (string)

### TicketResponse
- type: `tickets` (string)
- id: `1` (number)
- attributes (Ticket)
    - `created_at`: `2017-06-23 20:27:16` (string, nullable)
    - `updated_at`: `2017-06-23 20:27:16` (string, nullable)

### Attendee
- feature_code: `123f` (string)
- points: `100` (number)
- summary: `some information about attendee` (string)

### AttendeeResponse
- type: `attendee` (string)
- id: `1` (number)
- attributes (Attendee)
    - `created_at`: `2017-06-23 20:27:16` (string, nullable)
    - `updated_at`: `2017-06-23 20:27:16` (string, nullable)

### Booth
- points: `100` (number)
- summary: `some information about booth` (string)

### BoothResponse
- type: `booth` (string)
- id: `1` (number)
- attributes (Booth)
    - `created_at`: `2017-06-23 20:27:16` (string, nullable)
    - `updated_at`: `2017-06-23 20:27:16` (string, nullable)

### Speaker
- summary: `some information about speaker` (string)

### SpeakerResponse
- type: `speaker` (string)
- id: `1` (number)
- attributes (Speaker)
    - `created_at`: `2017-06-23 20:27:16` (string, nullable)
    - `updated_at`: `2017-06-23 20:27:16` (string, nullable)

### Material
- path: `material/path` (string)

### MaterialResponse
- type: `material` (string)
- id: `1` (number)
- attributes (Material)
    - `created_at`: `2017-06-23 20:27:16` (string, nullable)
    - `updated_at`: `2017-06-23 20:27:16` (string, nullable)

### Event
- information: `information about the event` (string)
- time_start: `event starting time` (string)
- time_end: `event ending time` (string)

### EventResponse
- type: `event` (string)
- id: `1` (number)
- attributes (Event)
    - `created_at`: `2017-06-23 20:27:16` (string, nullable)
    - `updated_at`: `2017-06-23 20:27:16` (string, nullable)

### Stage
- stage_type: `stage type` (string)
- information: `information about the stage` (string)

### StageResponse
- type: `stage` (string)
- id: `1` (number)
- attributes (Event)
    - `created_at`: `2017-06-23 20:27:16` (string, nullable)
    - `updated_at`: `2017-06-23 20:27:16` (string, nullable)

### Beacon
- code: `beacon code` (string)

### BeaconResponse
- type: `beacon` (string)
- id: `1` (number)
- attributes (Beacon)
    - `created_at`: `2017-06-23 20:27:16` (string, nullable)
    - `updated_at`: `2017-06-23 20:27:16` (string, nullable)

### Spot
- coordinate_x: `12` (number)
- coordinate_y: `14` (number)

### SpotResponse
- type: `spot` (string)
- id: `1` (number)
- attributes (Spot)
    - `created_at`: `2017-06-23 20:27:16` (string, nullable)
    - `updated_at`: `2017-06-23 20:27:16` (string, nullable)

### StagePicture
- url: `image/path` (string)

### StagePictureResponse
- type: `picture` (string)
- id: `1` (number)
- attributes (StagePicture)
    - `created_at`: `2017-06-23 20:27:16` (string, nullable)
    - `updated_at`: `2017-06-23 20:27:16` (string, nullable)

### PointTransactionResponse
- attributes (object)
    - `points`: `100` (number)
    - `from`: `1` (number, required) - valid booth id
    - `to`: `1` (number, required) - valid attendee id

### PointsLogResponse
- type: `pointslog` (string)
- id: `1` (number)
- attributes (object)
    - `amount`: `100` (number) - amount of point transfered
    - `created_at`: `2017-06-23 20:27:16` (string, nullable)
    - `updated_at`: `2017-06-23 20:27:16` (string, nullable)

### TransferTicketLog
- type: `ticket_transfer_log` (string)
- id: `1` (number)
- attributes (Ticket)
    - `created_at`: `2017-06-23 20:27:16` (string, nullable)
    - `updated_at`: `2017-06-23 20:27:16` (string, nullable)

### TicketTransferRequest
- ticket_id: `1` (number) - valid ticket id
- receiver_id: `1` (number) - valid user id